"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/forum",{

/***/ "./src/components/allPosts.tsx":
/*!*************************************!*\
  !*** ./src/components/allPosts.tsx ***!
  \*************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _wagmi_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @wagmi/core */ \"./node_modules/@wagmi/core/dist/esm/exports/index.js\");\n/* harmony import */ var _wagmi__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../wagmi */ \"./src/wagmi.ts\");\n/* harmony import */ var _contracts_deployed_contract__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../contracts/deployed-contract */ \"./src/contracts/deployed-contract.ts\");\n\n\n\nconst allPosts = async ()=>{\n    try {\n        // First verify the contract exists and is accessible\n        const contractCode = await _wagmi__WEBPACK_IMPORTED_MODULE_0__[\"default\"].publicClient.getBytecode({\n            address: _contracts_deployed_contract__WEBPACK_IMPORTED_MODULE_1__.deployedAddress\n        });\n        if (!contractCode) {\n            throw new Error(\"No contract found at the specified address\");\n        }\n        // Read the post increment counter\n        const postIdIncrement = await (0,_wagmi_core__WEBPACK_IMPORTED_MODULE_2__.readContract)(_wagmi__WEBPACK_IMPORTED_MODULE_0__[\"default\"], {\n            abi: _contracts_deployed_contract__WEBPACK_IMPORTED_MODULE_1__.ABI,\n            address: _contracts_deployed_contract__WEBPACK_IMPORTED_MODULE_1__.deployedAddress,\n            functionName: \"postIdIncrement\",\n            args: []\n        });\n        if (postIdIncrement === undefined || postIdIncrement === null) {\n            throw new Error(\"Failed to read postIdIncrement\");\n        }\n        const posts = [];\n        // Fetch posts only if we have a valid increment counter\n        if (postIdIncrement > 0n) {\n            // the first post was already initialised with 0x000000000\n            for(let i = 1n; i < postIdIncrement; i++){\n                const postPromise = (0,_wagmi_core__WEBPACK_IMPORTED_MODULE_2__.readContract)(_wagmi__WEBPACK_IMPORTED_MODULE_0__[\"default\"], {\n                    abi: _contracts_deployed_contract__WEBPACK_IMPORTED_MODULE_1__.ABI,\n                    address: _contracts_deployed_contract__WEBPACK_IMPORTED_MODULE_1__.deployedAddress,\n                    functionName: \"getPost\",\n                    args: [\n                        i\n                    ]\n                }).catch((error)=>{\n                    console.error(\"Failed to fetch post \".concat(i, \":\"), error);\n                    return undefined;\n                });\n                posts.push(postPromise);\n            }\n        }\n        const values = await Promise.all(posts);\n        return values.filter((post)=>!!post);\n    } catch (error) {\n        console.error(\"Error fetching posts:\", error);\n        throw new Error(error instanceof Error ? error.message : \"Failed to fetch posts from the contract\");\n    }\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (allPosts);\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29tcG9uZW50cy9hbGxQb3N0cy50c3giLCJtYXBwaW5ncyI6Ijs7OztBQUEyQztBQUNiO0FBQ3dDO0FBR3RFLE1BQU1JLFdBQVc7SUFDYixJQUFJO1FBQ0EscURBQXFEO1FBQ3JELE1BQU1DLGVBQWUsTUFBTUosMkRBQW1CLENBQUNNLFdBQVcsQ0FBQztZQUN2REMsU0FBU0wseUVBQWVBO1FBQzVCO1FBRUEsSUFBSSxDQUFDRSxjQUFjO1lBQ2YsTUFBTSxJQUFJSSxNQUFNO1FBQ3BCO1FBRUEsa0NBQWtDO1FBQ2xDLE1BQU1DLGtCQUFtQixNQUFNVix5REFBWUEsQ0FBQ0MsOENBQU1BLEVBQUU7WUFDaERVLEtBQUtULDZEQUFHQTtZQUNSTSxTQUFTTCx5RUFBZUE7WUFDeEJTLGNBQWM7WUFDZEMsTUFBTSxFQUFFO1FBQ1o7UUFFQSxJQUFJSCxvQkFBb0JJLGFBQWFKLG9CQUFvQixNQUFNO1lBQzNELE1BQU0sSUFBSUQsTUFBTTtRQUNwQjtRQUVBLE1BQU1NLFFBQTRDLEVBQUU7UUFFcEQsd0RBQXdEO1FBQ3hELElBQUlMLGtCQUFrQixFQUFFLEVBQUU7WUFDdEIsMERBQTBEO1lBQzFELElBQUssSUFBSU0sSUFBSSxFQUFFLEVBQUVBLElBQUlOLGlCQUFpQk0sSUFBSztnQkFDdkMsTUFBTUMsY0FBY2pCLHlEQUFZQSxDQUFDQyw4Q0FBTUEsRUFBRTtvQkFDckNVLEtBQUtULDZEQUFHQTtvQkFDUk0sU0FBU0wseUVBQWVBO29CQUN4QlMsY0FBYztvQkFDZEMsTUFBTTt3QkFBQ0c7cUJBQUU7Z0JBQ2IsR0FBR0UsS0FBSyxDQUFDQyxDQUFBQTtvQkFDTEMsUUFBUUQsS0FBSyxDQUFDLHdCQUEwQixPQUFGSCxHQUFFLE1BQUlHO29CQUM1QyxPQUFPTDtnQkFDWDtnQkFFQUMsTUFBTU0sSUFBSSxDQUFDSjtZQUNmO1FBQ0o7UUFFQSxNQUFNSyxTQUFTLE1BQU1DLFFBQVFDLEdBQUcsQ0FBQ1Q7UUFDakMsT0FBT08sT0FBT0csTUFBTSxDQUFDLENBQUNDLE9BQThCLENBQUMsQ0FBQ0E7SUFDMUQsRUFBRSxPQUFPUCxPQUFPO1FBQ1pDLFFBQVFELEtBQUssQ0FBQyx5QkFBeUJBO1FBQ3ZDLE1BQU0sSUFBSVYsTUFDTlUsaUJBQWlCVixRQUNYVSxNQUFNUSxPQUFPLEdBQ2I7SUFFZDtBQUNKO0FBRUEsK0RBQWV2QixRQUFRQSxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3NyYy9jb21wb25lbnRzL2FsbFBvc3RzLnRzeD9iOTUyIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHJlYWRDb250cmFjdCB9IGZyb20gXCJAd2FnbWkvY29yZVwiO1xuaW1wb3J0IGNvbmZpZyBmcm9tIFwiLi4vd2FnbWlcIjtcbmltcG9ydCB7IEFCSSwgZGVwbG95ZWRBZGRyZXNzIH0gZnJvbSBcIi4uL2NvbnRyYWN0cy9kZXBsb3llZC1jb250cmFjdFwiO1xuaW1wb3J0IHR5cGUgeyBQb3N0RGV0YWlscyB9IGZyb20gXCIuLi90eXBlcy9wb3N0cy90eXBlc1wiO1xuXG5jb25zdCBhbGxQb3N0cyA9IGFzeW5jICgpID0+IHtcbiAgICB0cnkge1xuICAgICAgICAvLyBGaXJzdCB2ZXJpZnkgdGhlIGNvbnRyYWN0IGV4aXN0cyBhbmQgaXMgYWNjZXNzaWJsZVxuICAgICAgICBjb25zdCBjb250cmFjdENvZGUgPSBhd2FpdCBjb25maWcucHVibGljQ2xpZW50LmdldEJ5dGVjb2RlKHtcbiAgICAgICAgICAgIGFkZHJlc3M6IGRlcGxveWVkQWRkcmVzc1xuICAgICAgICB9KTtcbiAgICAgICAgXG4gICAgICAgIGlmICghY29udHJhY3RDb2RlKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJObyBjb250cmFjdCBmb3VuZCBhdCB0aGUgc3BlY2lmaWVkIGFkZHJlc3NcIik7XG4gICAgICAgIH1cblxuICAgICAgICAvLyBSZWFkIHRoZSBwb3N0IGluY3JlbWVudCBjb3VudGVyXG4gICAgICAgIGNvbnN0IHBvc3RJZEluY3JlbWVudCA9IChhd2FpdCByZWFkQ29udHJhY3QoY29uZmlnLCB7XG4gICAgICAgICAgICBhYmk6IEFCSSxcbiAgICAgICAgICAgIGFkZHJlc3M6IGRlcGxveWVkQWRkcmVzcyxcbiAgICAgICAgICAgIGZ1bmN0aW9uTmFtZTogXCJwb3N0SWRJbmNyZW1lbnRcIixcbiAgICAgICAgICAgIGFyZ3M6IFtdLFxuICAgICAgICB9KSkgYXMgYmlnaW50O1xuXG4gICAgICAgIGlmIChwb3N0SWRJbmNyZW1lbnQgPT09IHVuZGVmaW5lZCB8fCBwb3N0SWRJbmNyZW1lbnQgPT09IG51bGwpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcIkZhaWxlZCB0byByZWFkIHBvc3RJZEluY3JlbWVudFwiKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGNvbnN0IHBvc3RzOiBQcm9taXNlPFBvc3REZXRhaWxzIHwgdW5kZWZpbmVkPltdID0gW107XG4gICAgICAgIFxuICAgICAgICAvLyBGZXRjaCBwb3N0cyBvbmx5IGlmIHdlIGhhdmUgYSB2YWxpZCBpbmNyZW1lbnQgY291bnRlclxuICAgICAgICBpZiAocG9zdElkSW5jcmVtZW50ID4gMG4pIHtcbiAgICAgICAgICAgIC8vIHRoZSBmaXJzdCBwb3N0IHdhcyBhbHJlYWR5IGluaXRpYWxpc2VkIHdpdGggMHgwMDAwMDAwMDBcbiAgICAgICAgICAgIGZvciAobGV0IGkgPSAxbjsgaSA8IHBvc3RJZEluY3JlbWVudDsgaSsrKSB7XG4gICAgICAgICAgICAgICAgY29uc3QgcG9zdFByb21pc2UgPSByZWFkQ29udHJhY3QoY29uZmlnLCB7XG4gICAgICAgICAgICAgICAgICAgIGFiaTogQUJJLFxuICAgICAgICAgICAgICAgICAgICBhZGRyZXNzOiBkZXBsb3llZEFkZHJlc3MsXG4gICAgICAgICAgICAgICAgICAgIGZ1bmN0aW9uTmFtZTogXCJnZXRQb3N0XCIsXG4gICAgICAgICAgICAgICAgICAgIGFyZ3M6IFtpXSxcbiAgICAgICAgICAgICAgICB9KS5jYXRjaChlcnJvciA9PiB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoYEZhaWxlZCB0byBmZXRjaCBwb3N0ICR7aX06YCwgZXJyb3IpO1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgICAgICAgICAgICAgIH0pIGFzIFByb21pc2U8UG9zdERldGFpbHMgfCB1bmRlZmluZWQ+O1xuXG4gICAgICAgICAgICAgICAgcG9zdHMucHVzaChwb3N0UHJvbWlzZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICBjb25zdCB2YWx1ZXMgPSBhd2FpdCBQcm9taXNlLmFsbChwb3N0cyk7XG4gICAgICAgIHJldHVybiB2YWx1ZXMuZmlsdGVyKChwb3N0KTogcG9zdCBpcyBQb3N0RGV0YWlscyA9PiAhIXBvc3QpO1xuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgIGNvbnNvbGUuZXJyb3IoXCJFcnJvciBmZXRjaGluZyBwb3N0czpcIiwgZXJyb3IpO1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICAgICAgICBlcnJvciBpbnN0YW5jZW9mIEVycm9yIFxuICAgICAgICAgICAgICAgID8gZXJyb3IubWVzc2FnZSBcbiAgICAgICAgICAgICAgICA6IFwiRmFpbGVkIHRvIGZldGNoIHBvc3RzIGZyb20gdGhlIGNvbnRyYWN0XCJcbiAgICAgICAgKTtcbiAgICB9XG59O1xuXG5leHBvcnQgZGVmYXVsdCBhbGxQb3N0czsiXSwibmFtZXMiOlsicmVhZENvbnRyYWN0IiwiY29uZmlnIiwiQUJJIiwiZGVwbG95ZWRBZGRyZXNzIiwiYWxsUG9zdHMiLCJjb250cmFjdENvZGUiLCJwdWJsaWNDbGllbnQiLCJnZXRCeXRlY29kZSIsImFkZHJlc3MiLCJFcnJvciIsInBvc3RJZEluY3JlbWVudCIsImFiaSIsImZ1bmN0aW9uTmFtZSIsImFyZ3MiLCJ1bmRlZmluZWQiLCJwb3N0cyIsImkiLCJwb3N0UHJvbWlzZSIsImNhdGNoIiwiZXJyb3IiLCJjb25zb2xlIiwicHVzaCIsInZhbHVlcyIsIlByb21pc2UiLCJhbGwiLCJmaWx0ZXIiLCJwb3N0IiwibWVzc2FnZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/components/allPosts.tsx\n"));

/***/ })

});