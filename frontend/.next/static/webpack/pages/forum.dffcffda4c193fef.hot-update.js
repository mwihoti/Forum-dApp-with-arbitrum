"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/forum",{

/***/ "./src/components/allPosts.tsx":
/*!*************************************!*\
  !*** ./src/components/allPosts.tsx ***!
  \*************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _wagmi_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @wagmi/core */ \"./node_modules/@wagmi/core/dist/esm/exports/index.js\");\n/* harmony import */ var _wagmi__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../wagmi */ \"./src/wagmi.ts\");\n/* harmony import */ var _contracts_deployed_contract__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../contracts/deployed-contract */ \"./src/contracts/deployed-contract.ts\");\n\n\n\nconst allPosts = async ()=>{\n    const postIdIncrement = await (0,_wagmi_core__WEBPACK_IMPORTED_MODULE_2__.readContract)(_wagmi__WEBPACK_IMPORTED_MODULE_0__[\"default\"], {\n        abi: _contracts_deployed_contract__WEBPACK_IMPORTED_MODULE_1__.ABI,\n        address: _contracts_deployed_contract__WEBPACK_IMPORTED_MODULE_1__.deployedAddress,\n        functionName: \"postIdIncrement\",\n        args: []\n    });\n    const posts = [];\n    // the first post was already initialised with 0x000000000\n    for(let i = 1; i < postIdIncrement; i++){\n        const post = (0,_wagmi_core__WEBPACK_IMPORTED_MODULE_2__.readContract)(_wagmi__WEBPACK_IMPORTED_MODULE_0__[\"default\"], {\n            abi: _contracts_deployed_contract__WEBPACK_IMPORTED_MODULE_1__.ABI,\n            address: _contracts_deployed_contract__WEBPACK_IMPORTED_MODULE_1__.deployedAddress,\n            functionName: \"getPost\",\n            args: [\n                BigInt(i)\n            ]\n        });\n        posts.push(post);\n    }\n    return await Promise.all(posts).then((values)=>{\n        const binding = values.filter((post)=>!!post);\n        return binding;\n    });\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (allPosts);\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29tcG9uZW50cy9hbGxQb3N0cy50c3giLCJtYXBwaW5ncyI6Ijs7OztBQUEyQztBQUNiO0FBQ3dDO0FBR3RFLE1BQU1JLFdBQVc7SUFDaEIsTUFBTUMsa0JBQW1CLE1BQU1MLHlEQUFZQSxDQUFDQyw4Q0FBTUEsRUFBRTtRQUNoREssS0FBS0osNkRBQUdBO1FBQ1JLLFNBQVNKLHlFQUFlQTtRQUN4QkssY0FBYztRQUNkQyxNQUFNLEVBQUU7SUFDWjtJQUVBLE1BQU1DLFFBQTRDLEVBQUU7SUFDcEQsMERBQTBEO0lBQzFELElBQUssSUFBSUMsSUFBSSxHQUFHQSxJQUFJTixpQkFBaUJNLElBQUs7UUFDdEMsTUFBTUMsT0FBeUNaLHlEQUFZQSxDQUFDQyw4Q0FBTUEsRUFBRTtZQUNoRUssS0FBS0osNkRBQUdBO1lBQ1JLLFNBQVNKLHlFQUFlQTtZQUN4QkssY0FBYztZQUNkQyxNQUFNO2dCQUFDSSxPQUFPRjthQUFHO1FBQ3JCO1FBRUFELE1BQU1JLElBQUksQ0FBQ0Y7SUFDZjtJQUNBLE9BQU8sTUFBTUcsUUFBUUMsR0FBRyxDQUFDTixPQUFPTyxJQUFJLENBQUMsQ0FBQ0M7UUFDbEMsTUFBTUMsVUFBVUQsT0FBT0UsTUFBTSxDQUFDLENBQUNSLE9BQThCLENBQUMsQ0FBQ0E7UUFDL0QsT0FBT087SUFDWDtBQUNEO0FBRUEsK0RBQWVmLFFBQVFBLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vc3JjL2NvbXBvbmVudHMvYWxsUG9zdHMudHN4P2I5NTIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgcmVhZENvbnRyYWN0IH0gZnJvbSBcIkB3YWdtaS9jb3JlXCI7XG5pbXBvcnQgY29uZmlnIGZyb20gXCIuLi93YWdtaVwiO1xuaW1wb3J0IHsgQUJJLCBkZXBsb3llZEFkZHJlc3MgfSBmcm9tIFwiLi4vY29udHJhY3RzL2RlcGxveWVkLWNvbnRyYWN0XCI7XG5pbXBvcnQgdHlwZSB7IFBvc3REZXRhaWxzIH0gZnJvbSBcIi4uL3R5cGVzL3Bvc3RzL3R5cGVzXCI7XG5cbmNvbnN0IGFsbFBvc3RzID0gYXN5bmMgKCkgPT4ge1xuXHRjb25zdCBwb3N0SWRJbmNyZW1lbnQgPSAoYXdhaXQgcmVhZENvbnRyYWN0KGNvbmZpZywge1xuICAgIFx0YWJpOiBBQkksXG4gICAgXHRhZGRyZXNzOiBkZXBsb3llZEFkZHJlc3MsXG4gICAgXHRmdW5jdGlvbk5hbWU6IFwicG9zdElkSW5jcmVtZW50XCIsXG4gICAgXHRhcmdzOiBbXSxcblx0fSkpIGFzIGJpZ2ludDtcblxuXHRjb25zdCBwb3N0czogUHJvbWlzZTxQb3N0RGV0YWlscyB8IHVuZGVmaW5lZD5bXSA9IFtdO1xuXHQvLyB0aGUgZmlyc3QgcG9zdCB3YXMgYWxyZWFkeSBpbml0aWFsaXNlZCB3aXRoIDB4MDAwMDAwMDAwXG5cdGZvciAobGV0IGkgPSAxOyBpIDwgcG9zdElkSW5jcmVtZW50OyBpKyspIHtcbiAgICBcdGNvbnN0IHBvc3Q6IFByb21pc2U8UG9zdERldGFpbHMgfCB1bmRlZmluZWQ+ID0gcmVhZENvbnRyYWN0KGNvbmZpZywge1xuICAgICAgICBcdGFiaTogQUJJLFxuICAgICAgICBcdGFkZHJlc3M6IGRlcGxveWVkQWRkcmVzcyxcbiAgICAgICAgXHRmdW5jdGlvbk5hbWU6IFwiZ2V0UG9zdFwiLFxuICAgICAgICBcdGFyZ3M6IFtCaWdJbnQoaSldLFxuICAgIFx0fSkgYXMgUHJvbWlzZTxQb3N0RGV0YWlscyB8IHVuZGVmaW5lZD47XG5cbiAgICBcdHBvc3RzLnB1c2gocG9zdCk7XG5cdH1cblx0cmV0dXJuIGF3YWl0IFByb21pc2UuYWxsKHBvc3RzKS50aGVuKCh2YWx1ZXMpID0+IHtcbiAgICBcdGNvbnN0IGJpbmRpbmcgPSB2YWx1ZXMuZmlsdGVyKChwb3N0KTogcG9zdCBpcyBQb3N0RGV0YWlscyA9PiAhIXBvc3QpO1xuICAgIFx0cmV0dXJuIGJpbmRpbmc7XG5cdH0pO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgYWxsUG9zdHM7Il0sIm5hbWVzIjpbInJlYWRDb250cmFjdCIsImNvbmZpZyIsIkFCSSIsImRlcGxveWVkQWRkcmVzcyIsImFsbFBvc3RzIiwicG9zdElkSW5jcmVtZW50IiwiYWJpIiwiYWRkcmVzcyIsImZ1bmN0aW9uTmFtZSIsImFyZ3MiLCJwb3N0cyIsImkiLCJwb3N0IiwiQmlnSW50IiwicHVzaCIsIlByb21pc2UiLCJhbGwiLCJ0aGVuIiwidmFsdWVzIiwiYmluZGluZyIsImZpbHRlciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/components/allPosts.tsx\n"));

/***/ })

});